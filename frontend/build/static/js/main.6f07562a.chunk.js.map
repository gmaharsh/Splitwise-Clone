{"version":3,"sources":["context/auth.js","Components/Header/Header.js","firebase.js","Components/Authentication/Login/Login.js","Components/Authentication/SignUp/Signup.js","utils/AuthRoute.js","Components/Body/Ads/Ads.js","utils/graphql.js","Components/Body/Dashboard/Card/Card.js","Components/Body/Dashboard/Charts/Charts.js","Components/Body/Dashboard/Dashboard.js","Components/Body/Sidebar/Sidebar.js","Components/Body/Body.js","Components/Body/TestForm/Testform.js","App.js","ApolloProvider.js","reportWebVitals.js","index.js"],"names":["initialState","user","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","AuthContext","createContext","register","userData","login","logout","authReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","setItem","token","data","Header","useContext","console","log","useState","activeItem","setActiveItem","username","options","key","text","onClick","icon","as","Link","to","userNotOptions","className","Menu","borderless","inverted","style","paddingRight","paddingLeft","src","alt","position","Item","name","active","e","borderRadius","width","marginRight","Dropdown","inline","defaultValue","auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","provider","GoogleAuthProvider","LOGIN_USER","gql","Login","context","errors","setErrors","email","password","values","setValues","gSign","setGSign","useMutation","update","_","history","push","onError","err","graphQLErrors","extensions","exception","variables","loginUser","loading","onChangeValues","target","Form","onSubmit","preventDefault","noValidate","Field","onChange","autocomplete","Button","color","basic","signInWithPopup","then","result","uid","Icon","Object","keys","length","map","REGISTER_USER","Signup","addUser","displayName","catch","error","alert","message","AuthRoute","Component","component","rest","render","Ads","FETCH_USERS_QUERY","FETCH_POSTS_QUERY","Card","amount","owe","class","Charts","ADD_TRANSACTION","SETTLE_UP","Dashboard","setOwe","owed","setOwed","counter","setCounter","firstOpen","setFirstOpen","secondOpen","setSecondOpen","thirdOpen","setThirdOpen","friends","setFriends","settleUpName","setsettleUpName","amountOwed","amountOwe","postId","settleUpvalues","setsettleUpValues","body","changeValues","event","useQuery","users","useEffect","getUsers","prevState","submitsettleUpForm","settleUpAmount","getAccountDetails","account","user1","AccountDetails","id","_id","friendName","user2","user1OweCount","user2OweCount","proxy","addAmount","readQuery","query","d","writeQuery","addBills","Modal","size","onClose","onOpen","open","Content","list","placeholder","labeled","button","marginLeft","content","Actions","positive","o","textAlign","display","flexDirection","paddingTop","margin","borderRight","borderLeft","lineHeight","Sidebar","Body","Testform","settleUpValues","addtoDatabase","App","exact","path","httpLink","createHttpLink","uri","setAuthorizationLink","setContext","request","previousContext","headers","Authorization","client","ApolloClient","link","concat","cache","InMemoryCache","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.6f07562a.chunk.js","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport jwtDecode from 'jwt-decode';\n\nconst initialState = {\n  user: null\n};\n\nif (localStorage.getItem('jwtToken')) {\n    const decodedToken = jwtDecode(localStorage.getItem('jwtToken'));\n    if (decodedToken.exp * 1000 < Date.now()) {\n        localStorage.removeItem('jwtToken');\n    } else {\n        initialState.user = decodedToken;\n    }\n}\nconst AuthContext = createContext({\n    user: null,\n    register : ( userData) => { },\n    login: (userData) => { },\n    logout:() => {},\n})\n\nfunction authReducer(state, action) {\n    switch (action.type) {\n        case 'LOGIN':\n            return {\n                ...state,\n                user:action.payload\n            }\n        case 'REGISTER':\n            return {\n                ...state,\n                user:action.payload\n            }\n        case 'LOGOUT':\n            return {\n                ...state,\n                user:null\n            }\n        default:\n            return state\n    }\n}\n\nfunction AuthProvider(props) {\n    const [state, dispatch] = useReducer(authReducer, initialState);\n\n    function login(userData) {\n        localStorage.setItem('jwtToken', userData.token);\n        dispatch({\n            type: 'LOGIN',\n            payload:userData\n        })\n    }\n\n    function register(userData) {\n        localStorage.setItem('jwtToken', userData.token);\n        dispatch({\n            type: 'REGISTER',\n            payload:userData\n        })\n    }\n\n    function logout(data) {\n        localStorage.removeItem('jwtToken');\n        dispatch({\n            type: 'LOGOUT',\n        })\n    }\n\n    return (\n        <AuthContext.Provider value={{user: state.user, login, logout, register}} {...props} />\n    )\n}\n\nexport { AuthContext, AuthProvider }\n","import React, { useContext, useState } from 'react';\nimport './Header.css';\nimport { Dropdown, Icon, Menu } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from '../../context/auth';\n\n\n\nfunction Header() {\n\n    const { user, logout } = useContext(AuthContext)\n    console.log(user)\n    const [activeItem, setActiveItem] = useState('');\n    const handleItemClick = (e, { name }) => setActiveItem(name)\n\n    let username = \"\";\n    if (user) {\n        username = user.username\n    }\n\n    const options = [\n        { key: 'user', text: username, value:username },\n        { key: 'sign-out', text: 'Sign Out', onClick: logout, icon: 'sign out', as: Link, to: '/login'},\n    ]\n    const userNotOptions = [\n        { key: 'login', text: 'Login', as: Link, to: '/login' },\n        { key: 'signup', text: 'Signup', as: Link, to: '/Signup' }\n     ]\n\n    return (\n        <div className=\"header\">\n            <Menu borderless inverted style={{ paddingRight:'40vh', paddingLeft:'40vh'}}>\n                <img src=\"https://assets.splitwise.com/assets/core/logo-wordmark-horizontal-white-short-c309b91b96261a8a993563bdadcf22a89f00ebb260f4f04fd814c2249a6e05d4.svg\" alt=\"\" />\n                <Menu.Menu position='right'>\n                    <Menu.Item\n                        name='friends'\n                        active={activeItem === 'friends'}\n                        onClick={handleItemClick}\n                    >\n                        <img src=\"http://assets.stickpng.com/images/585e4bf3cb11b227491c339a.png\" style={{ borderRadius:'30px', width:'3vh', marginRight:'20px'}} alt=\"\" />\n                        {user ? (\n                            <Dropdown\n                                inline\n                                options={options}\n                                defaultValue={options[0].value}\n                            />):(<Dropdown\n                                inline\n                                options={userNotOptions}\n                                defaultValue={userNotOptions[0].value}\n                            />)}\n                            \n                    </Menu.Item>\n                 </Menu.Menu>\n            </Menu>\n        </div>\n    )\n}\n\nexport default Header\n","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD4ZA1mmNQ42_XDPgczLxoQWjg1G4C3_Ys\",\n  authDomain: \"splitwise-clone-ea9a2.firebaseapp.com\",\n  projectId: \"splitwise-clone-ea9a2\",\n  storageBucket: \"splitwise-clone-ea9a2.appspot.com\",\n  messagingSenderId: \"636225333027\",\n  appId: \"1:636225333027:web:390880c608375d97d74e96\",\n  measurementId: \"G-M7R5MYH9NL\"\n};\n\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\n\nexport { db, auth, provider };","import React, { useContext, useState } from 'react';\nimport { Button, Form, Icon } from 'semantic-ui-react';\nimport './Login.css';\nimport gql from 'graphql-tag'\nimport { useMutation } from '@apollo/react-hooks';\nimport { AuthContext } from '../../../context/auth';\nimport { auth, provider } from '../../../firebase';\n\n\nfunction Login(props) {\n    const context = useContext(AuthContext)\n    const [errors, setErrors] = useState({});\n\n    const [values, setValues] = useState({\n        email: \"\",\n        password: \"\",\n    });\n    const[gSign, setGSign] = useState(false)\n\n    const googleSignIn = () => {\n        setGSign(true)\n        console.log(\"Google Sign In\")\n        auth.signInWithPopup(provider)\n            .then((result) => {\n                setValues({\n                    email: result.user.email,\n                    password: result.user.uid\n                })\n            })\n        // console.log(values)\n    }\n\n    \n    // console.log(values)\n\n    const [loginUser, { loading }] = useMutation(LOGIN_USER, {\n        update(_, { data: { login: userData } }) {\n            console.log(userData)\n            context.login(userData)\n            props.history.push('/')\n        }, onError(err) {\n            setErrors(err&&err.graphQLErrors[0]?err.graphQLErrors[0].extensions.exception.errors:{});\n        },\n        variables:values\n    })\n\n    // console.log(gSign)\n    if (gSign) {\n        if (values.password != \"\") {\n            console.log(\"Call Google SignIn\")\n            console.log(values)\n            loginUser()\n        }\n    }\n\n    const onChangeValues = (e) => {\n        setValues({...values, [e.target.name]: e.target.value});\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        console.log(values)\n        loginUser()\n    }\n\n\n    return (\n        <div className=\"login\">\n            <img src=\"https://assets.splitwise.com/assets/core/logo-square-65a6124237868b1d2ce2f5db2ab0b7c777e2348b797626816400534116ae22d7.svg\" alt=\"\" />\n            <div className=\"login__details\">\n                <h4>WELCOME TO SPLITWISE</h4>\n                <Form onSubmit={onSubmit} noValidate className={loading? 'loading' :''}>\n                    <Form.Field>\n                        <label>Email address</label>\n                        <input\n                            type=\"text\"\n                            name=\"email\"\n                            value={values.email}\n                            onChange={onChangeValues}\n                            autocomplete=\"off\"\n                        />\n                    </Form.Field>\n                    <Form.Field>\n                        <label>Password</label>\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            value={values.password}\n                            onChange={onChangeValues}\n                        />\n                    </Form.Field>\n                    <Button className=\"ui orange button\" type='submit'>Log in</Button>\n                    <p>Forgot your password? <span style={{ color: 'blue'}}>Click Here</span></p>\n                    <hr />  \n                </Form>\n                <div className=\"login__socialButtons\">\n                        <p>Or log in with</p>\n                        <Button basic onClick={googleSignIn}>\n                            <Icon name='google' /> Google\n                        </Button>\n                    </div>\n                {Object.keys(errors).length > 0 && (\n                    <div className=\"ui error message\">\n                    <ul className=\"list\">\n                        {Object.values(errors).map((value) => (\n                        <li key={value}>{value}</li>\n                        ))}\n                    </ul>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nconst LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      id\n      email\n      username\n      createdAt\n      token\n    }\n  }\n`;\n\n\nexport default Login","import React, { useContext, useState } from 'react';\nimport { Button, Form, Icon } from 'semantic-ui-react';\nimport './Signup.css';\nimport gql from 'graphql-tag'\nimport { useMutation } from '@apollo/react-hooks';\nimport { AuthContext } from '../../../context/auth';\nimport { auth, provider } from '../../../firebase';\n\n\nfunction Signup(props) {\n    const context = useContext(AuthContext)\n    const [errors, setErrors] = useState({});\n\n    const [values, setValues] = useState({\n        username: \"\",\n        email: \"\",\n        password: \"\",\n    });\n\n    let email = \"\"\n    let password = \"\"\n    let username = \"\"\n\n    \n\n\n    const onChangeValues = (e) => {\n        setValues({...values, [e.target.name]: e.target.value});\n    }\n\n    \n\n    //Google SignUp\n    const googleSignUp = (e) => {\n        console.log(\"I am clicked\")\n        e.preventDefault();\n\n        auth.signInWithPopup(provider)\n            .then(result => {\n                setValues({\n                    username: result.user.displayName,\n                    email: result.user.email,\n                    password: result.user.uid\n                });\n            })\n            .catch((error) => alert(error.message));\n    }\n\n    \n\n    const [addUser, { loading }] = useMutation(REGISTER_USER, {\n        variables:values,\n        update(_, result ) {\n            console.log(result)\n            context.register(result.data.register)\n            props.history.push('/')\n        },onError(err) {\n            // setErrors(err.graphQLErrors[0].extensions.exception.errors);\n        }\n    })\n\n    if (values.password != \"\") {\n        addUser()\n    }\n\n    const onSubmit = () => {\n        // e.preventDefault();\n        console.log(values)\n        addUser()\n    }\n\n    // console.log(values)\n    \n\n    return (\n        <div className=\"signup\">\n            <img src=\"https://assets.splitwise.com/assets/core/logo-square-65a6124237868b1d2ce2f5db2ab0b7c777e2348b797626816400534116ae22d7.svg\" alt=\"\" />\n            <div className=\"signup__details\">\n                <h4>INTRODUCE YOURSELF</h4>\n                <Form onSubmit={onSubmit} noValidate className={loading? 'loading' :''}>\n                    <Form.Field>\n                        <label>Hi there! My name is</label>\n                        <input\n                            type=\"text\"\n                            name=\"username\"\n                            value={values.username}\n                            onChange={onChangeValues}\n                            autocomplete=\"off\"\n                        />\n                    </Form.Field>\n                    <Form.Field>\n                        <label>Here’s my email address:</label>\n                        <input\n                            type=\"text\"\n                            name=\"email\"\n                            value={values.email}\n                            onChange={onChangeValues}\n                            autocomplete=\"off\"\n                        />\n                    </Form.Field>\n                    <Form.Field>\n                        <label>And here’s my password:</label>\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            value={values.password}\n                            onChange={onChangeValues}\n                            autocomplete=\"off\"\n                        />\n                    </Form.Field>\n                    <div className=\"buttons\">\n                        <Button className=\"ui orange button\" type='submit'>\n                            Sign me up!\n                        </Button>\n                        or \n                        <Button basic onClick={googleSignUp}>\n                            <Icon name='google' /> Google\n                        </Button>\n                    </div>\n                </Form>\n                {Object.keys(errors).length > 0 && (\n                    <div className=\"ui error message\">\n                    <ul className=\"list\">\n                        {Object.values(errors).map((value) => (\n                        <li key={value}>{value}</li>\n                        ))}\n                    </ul>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nconst REGISTER_USER = gql`\n  mutation register(\n    $username: String!\n    $email: String!\n    $password: String!\n  ) {\n    register(registerInput:{\n    username:$username\n    password:$password\n    email:$email\n    }){\n        id\n        email\n        token\n        username\n    }\n  }\n`;\n\nexport default Signup\n","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from '../context/auth';\n\nfunction AuthRoute({ component: Component, ...rest }) {\n  const { user } = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        user ? <Redirect to=\"/\" /> : <Component {...props} />\n      }\n    />\n  );\n}\n\nexport default AuthRoute;\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport './Ads.css';\n\nfunction Ads() {\n    return (\n        <div className=\"ads\">\n            <h3>Get Splitwise Pro</h3>\n            <img src=\"https://assets.splitwise.com/assets/pro/logo-337b1a7d372db4b56c075c7893d68bfc6873a65d2f77d61b27cb66b6d62c976c.svg\" alt=\"\" />\n            <p>Subscribe to Splitwise Pro for no ads, currency conversion, charts, search, and more.</p>\n            <Button color=\"orange\">Learn More</Button>\n        </div>\n    )\n}\n\nexport default Ads\n","import gql from 'graphql-tag';\n\nexport const FETCH_USERS_QUERY = gql`\n{\n    getUsers{\n        username\n        email\n        createdAt\n    }\n}`;\n\nexport const SETTLE_UP = gql`\nmutation settleUpAmount(\n    $amount:String!, \n    $postID:String!\n  ) {\n    addAmount(amount:$amount, postID:$postID){\n        user1\n        user2\n        user1OweCount\n        user2OweCount\n        createdAt\n    }\n  }\n`;\n\nexport const FETCH_POSTS_QUERY = gql`\n    query($username: String!){\n        getAccountDetails(username:$username){\n            _id\n            user1\n            user2\n            amountOwe{\n                amount\n                body\n                lenderName\n                borrowerName\n            }\n            user1OweCount\n            user2OweCount\n            createdAt\n        }\n    }\n`;","import React from 'react';\nimport './Card.css';\n\nfunction Card({ name, amount, owe }) {\n    // console.log(\"Name:-\", name)\n    return (\n        <div className=\"card\">\n            {owe ? (\n                <div className=\"card\">\n                    <img\n                        class=\"ui avatar image\"\n                        src=\"https://s3.amazonaws.com/splitwise/uploads/user/default_avatars/avatar-teal22-100px.png\"\n                        alt=\"\"\n                    />\n                    <div className=\"card__details\">\n                        <h4>{name}</h4>\n                        {owe ? (<span style={{color: '#ff652f'}}><p>you owe ${amount}</p></span>) : (<span style={{color: '#5bc5a7'}}><p>owes you ${amount}</p></span>)}\n                    </div>\n                </div>\n            ): (\n                <div className=\"card\">\n                    <img\n                        class=\"ui avatar image\"\n                        src=\"https://s3.amazonaws.com/splitwise/uploads/user/default_avatars/avatar-orange22-100px.png\"\n                        alt=\"\"\n                    />\n                    <div className=\"card__details\">\n                        <h4>{name}</h4>\n                        {owe ? (<span style={{color: '#ff652f'}}><p>you owe ${amount}</p></span>) : (<span style={{color: '#5bc5a7'}}><p>owes you ${amount}</p></span>)}\n                    </div>  \n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default Card\n","import React, { useEffect, useState } from 'react';\nimport './Charts.css';\n// import ApexCharts from 'apexcharts'\nimport Chart from \"react-apexcharts\";\n\n\n\nfunction Charts({ data }) {\n    console.log(data)\n    const [options, setOptions] = useState({})\n    const [series, setSeries] = useState([])\n    useEffect(() => {\n        setOptions({\n        chart: {\n          \n                type: 'bar',\n                height: 10\n          },\n          datfill: {\n          colors: [ '#E91E63', '#9C27B0']\n        },\n\n\n              plotOptions: {\n                bar: {\n                  borderRadius: 25,\n                  horizontal: true,\n                }\n              },\n              xaxis: {\n                categories: ['June'],\n              },\n              grid: {\n                // xaxis: {\n                //   lines: {\n                //     show: true\n                //   }\n                // }\n              },\n              yaxis: {\n                reversed: true,\n                axisTicks: {\n                  // show: true\n                }\n          }\n        })\n    setSeries([\n        {\n          data: [400]\n        }\n      ])\n    },[])\n    \n\n\n    // console.log(\"From Charts:-\", data)\n    return (\n        <div className=\"charts\">\n          <div className=\"dashboard__accounts\">\n            <div className=\"dashboard__owe\">\n              <Chart\n                options={options}\n                series={series}\n                type=\"bar\"\n                width=\"500\"\n              />\n            </div>\n          </div>\n        </div>\n    )\n}\n\nexport default Charts\n","import { gql, useMutation, useQuery } from '@apollo/react-hooks';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Dropdown, Form, Icon, Input, MenuItem, Modal, Popup, Select } from 'semantic-ui-react';\nimport { AuthContext } from '../../../context/auth';\nimport { FETCH_USERS_QUERY } from '../../../utils/graphql';\nimport { FETCH_POSTS_QUERY } from '../../../utils/graphql';\nimport Accounts from './Accounts/Accounts';\n// import { SETTLE_UP } from '../../../utils/graphql';\nimport Card from './Card/Card';\nimport Charts from './Charts/Charts';\nimport './Dashboard.css';\nfunction Dashboard({props}) {\n    \n\n    const user = useContext(AuthContext)\n    const [owe, setOwe] = useState([])\n    const [owed, setOwed] = useState([])\n    const [counter, setCounter] = useState([])\n    const [firstOpen, setFirstOpen] = useState(false)\n    const [secondOpen, setSecondOpen] = useState(false)\n    const [thirdOpen, setThirdOpen] = useState(false)\n    const [errors, setErrors] = useState({});\n    const [friends, setFriends] = useState([]);\n    const [settleUpName, setsettleUpName] = useState([]);\n    let amountOwed = 0;\n    let amountOwe = 0;\n\n    const [settleUpvalues, setsettleUpValues] = useState({\n        amount: \"\",\n        postId: \"\",\n    });\n\n    const [values, setValues] = useState({\n        body: \"\",\n        amount: \"\",\n        username: \"\"\n    });\n\n    const changeValues = (event) => {\n        setValues({ ...values, [event.target.name]: event.target.value })\n    }\n\n    const changeValuessettleUp = (e) => {\n        setsettleUpValues({...settleUpvalues, [e.target.name]:e.target.value})\n    }\n\n    const { loading, data: users } = useQuery(FETCH_USERS_QUERY); \n\n    \n\n    useEffect(() => {\n        if (users) {\n            users.getUsers.map(friends => {\n                if (friends.username != \"Maharsh\") {\n                    setFriends(prevState => [...prevState, friends.username])\n                }})\n        }\n        \n    },[users])\n\n    const settleUp = () => {\n        // console.log(\"I am clicked\")\n        owe.map(o => {\n            console.log(o.AccountDetails.id)\n            setsettleUpValues({\n                postId:o.AccountDetails.id,\n                amount: (-o.AccountDetails.amount),\n            })\n            setsettleUpName(o.AccountDetails.friendName)\n        })\n        // console.log(settleUpvalues)\n    }\n\n    \n    const submitsettleUpForm = (e) => {\n        e.preventDefault();\n        setSecondOpen(false)\n        setThirdOpen(false)\n        // console.log(\"settleUpvalues after submitting\", settleUpvalues)\n        settleUpAmount();\n    }\n\n    \n\n    const { data } = useQuery(FETCH_POSTS_QUERY, { \n        variables: { \n            username: user.user.username\n        },\n        update(_, result) {\n            // console.log(\"results from post query\", result)\n        }\n    })\n\n    \n    // console.log(\"Data before UseEffect Block\", data)\n    console.log(counter)\n    useEffect(() => {\n        // console.log(\"Data Passed in useEffect\", data)\n        setOwe([])\n        setOwed([])\n        if (data) {\n            data.getAccountDetails.map(account => {\n                // console.log(\"Account Checking\", account)\n                if (account.user1 === user.user.username) {\n                    let AccountDetails = {\n                        id: account._id,\n                        friendName: account.user2,\n                        amount: account.user1OweCount\n                    }\n                    if (account.user1OweCount > 0) {\n                        // setOwedAmount([...owedAmount, account.amountOwe])\n                        setOwed(prevState => [...prevState, {AccountDetails}])\n                    } else {\n                        console.log(account.user1OweCount)\n                        // setOweAmount([...owedAmount, account.amountOwe])\n                        setOwe(prevState => [...prevState, {AccountDetails}])\n                    }\n                }\n                if (account.user2 == user.user.username) {\n                    let AccountDetails = {\n                        id: account._id,\n                        friendName: account.user1,\n                        amount: -account.user1OweCount\n                    }\n                    if (account.user2OweCount > 0) {\n                        // setOwedAmount([...owedAmount, account.amountOwe])\n                        setOwed(prevState => [...prevState, {AccountDetails}])\n                    } else {\n                        // console.log(account.user2OweCount)\n                        // setOweAmount([...owedAmount, account.amountOwe])\n                        setOwe(prevState => [...prevState, {AccountDetails}])\n                    }\n                }\n            })\n        }\n    },[data, counter])\n\n    \n\n    const submitForm = (e) => {\n        e.preventDefault();\n        setFirstOpen(false)\n        addBills();\n    }\n\n    const [addBills, { error }] = useMutation(ADD_TRANSACTION, {\n        variables: values,\n        update(proxy, result) {\n            console.log(result.data.addAmount)\n            const data = proxy.readQuery({\n                query: FETCH_POSTS_QUERY,\n                variables: {\n                    username: user.user.username\n                }\n            });\n            console.log(data)\n            data && data.getAccountDetails.map(d => {\n                if (result.data.addAmount.user1 === d.user1) {\n                    if (result.data.addAmount.user2 === d.user2) {\n                        d.amountOwe = [result.data.addAmount.amountOwe[0], ...d.amountOwe]\n                        d.user1OweCount = result.data.addAmount.user1OweCount;\n                        d.user2OweCount = result.data.addAmount.user2OweCount;\n                        proxy.writeQuery({ query: FETCH_POSTS_QUERY, data });\n                        setCounter(counter + 1)\n                    } else {\n                        \n                    }\n                }\n            })\n            \n            // console.log(\"Changed Data\", data)\n            values.body = '';\n            values.amount = '';\n            values.username = '';\n        }, onError(err) {\n            setErrors(err && err.graphQLErrors[0] ? err.graphQLErrors[0].extensions.exception.errors : {});\n        }\n    });\n\n    const [settleUpAmount] = useMutation(SETTLE_UP, {\n        variables:settleUpvalues,\n        update(proxy, result) {\n            console.log(result.data.settleUpAmount)\n            const data = proxy.readQuery({\n                query: FETCH_POSTS_QUERY,\n                variables: {\n                    username: user.user.username\n                }\n            });\n            console.log(data)\n            data && data.getAccountDetails.map(d => {\n                // console.log(result.data.settleUpAmount.user1)\n                // console.log(result.data.settleUpAmount.user2)\n                \n                if (result.data.settleUpAmount.user1 === d.user1) {\n                    if (result.data.settleUpAmount.user2 === d.user2) {\n                        // console.log(d.user1)\n                        // console.log(d.user2)\n                        d.user1OweCount = result.data.settleUpAmount.user1OweCount;\n                        d.user2OweCount = result.data.settleUpAmount.user2OweCount;\n                        proxy.writeQuery({ query: FETCH_POSTS_QUERY, data });\n                        setCounter(counter + 1)\n                        // \n                    }\n                }\n            })\n            \n            console.log(\"Changed Data\", data)\n\n            settleUpvalues.amount = \"\";\n            settleUpvalues.postId = \"\";\n\n        }\n    });\n\n    const submitPayment = () => {\n        setSecondOpen(false)\n        setThirdOpen(false)\n    }\n\n    \n    return (\n        <div className=\"dashboard\">\n            <div className=\"dashboard__heading\">\n                <h3>Dashboard</h3>\n                <div className=\"dashboard__buttons\">\n                    {user.user && (\n                        <> \n                            <button class=\"medium ui orange button\" onClick={() => setFirstOpen(true)}>Add an Expense</button>\n                            <button class=\"medium ui teal button\" onClick={() => setSecondOpen(true)}>Settle Up</button>\n                            <Modal\n                                as={Form}\n                                onSubmit={submitForm}\n                                size=\"tiny\"\n                                onClose={() => setFirstOpen(false)}\n                                onOpen={() => setFirstOpen(true)}\n                                open={firstOpen}\n                            >\n                                <Modal.Header>Add an Expense</Modal.Header>\n                                <Modal.Content className=\"model__content\">\n                                    With you and :\n                                        <input\n                                            list='people'\n                                            // name={values.username}\n                                            // value={values.username}\n                                            placeholder='Choose a friend...'\n                                            onChange={(e) => setValues({ username: e.target.value })}\n                                            autocomplete=\"off\"\n                                        />\n                                        <datalist\n                                            id=\"people\"\n                                            // value={borrow}\n                                        >\n                                        {friends && friends.map(user => (\n                                            <option key={user} value={user} />\n                                        ))}\n                                        </datalist>\n                                </Modal.Content>\n                                <hr />\n                                <Modal.Content className=\"model__contentdescription divider\">\n                                        <input\n                                            placeholder=\"Enter a description\"\n                                            name=\"body\"\n                                            value={values.body}\n                                            onChange={changeValues}\n                                            autocomplete=\"off\"\n                                        />\n                                        <input\n                                            placeholder=\"Enter an amount\"\n                                            name=\"amount\"\n                                            value={values.amount}\n                                            onChange={changeValues}\n                                            autocomplete=\"off\"\n                                        />\n                                </Modal.Content>\n                                <Modal.Content className=\"model__contentbuttons\">\n                                        Paid by <p>{owe &&  owe.AccountDetails}</p>\n                                        <Dropdown\n                                            text='Add user'\n                                            labeled\n                                            button\n                                            className='icon'\n                                            style={{ marginLeft: '10px' }}\n                                        >\n                                            <Dropdown.Menu>\n                                            <Dropdown.Header content='People You Might Know' />\n                                            {/* {friendOptions.map((option) => (\n                                                <Dropdown.Item key={option.value} {...option} />\n                                            ))} */}\n                                            </Dropdown.Menu>\n                                        </Dropdown>\n                                        and split\n                                        <Dropdown\n                                            text='Add user'\n                                            labeled\n                                            button\n                                            className='icon'\n                                            style={{ marginLeft: '10px' }}\n                                        >\n                                            <Dropdown.Menu>\n                                            <Dropdown.Header content='People You Might Know' />\n                                                <Dropdown.Item  value=\"You Owe Full\" />\n                                            {/* {friendOptions.map((option) => (\n                                                \n                                            ))} */}\n                                            </Dropdown.Menu>\n                                        </Dropdown>\n                                </Modal.Content>    \n                                <Modal.Actions>\n                                        <Button\n                                            color='black'\n                                            onClick={() => setFirstOpen(false)}\n                                            >\n                                        Cancel\n                                        </Button>\n                                        <Button\n                                            content=\"Save\"\n                                            type='submit'\n                                            positive\n                                        />\n                                </Modal.Actions>\n                                {Object.keys(errors).length > 0 && (\n                                    <div className=\"ui error message\">\n                                    <ul className=\"list\">\n                                        {Object.values(errors).map((value) => (\n                                        <li key={value}>{value}</li>\n                                        ))}\n                                    </ul>\n                                    </div>\n                                )}\n                            </Modal>\n                            {/* Settle UP Modal Starts */}\n                            <Modal\n                                size=\"tiny\"\n                                onClose={() => setSecondOpen(false)}\n                                onOpen={() => setSecondOpen(true)}\n                                open={secondOpen}\n                                onClick={settleUp}\n                            >\n                                <Modal.Header>Settle Up</Modal.Header>\n                                \n                                <Modal.Content className=\"model__contentdescription divider\" style={{ textAlign: 'center' }} >\n                                    Choose a payment method\n                                </Modal.Content>\n                                <Modal.Content className=\"model__contentbuttons\" style={{ display: 'flex', flexDirection: 'column', paddingTop:'20px'}}>\n                                    <Button color='green' onClick={() => setThirdOpen(true)} >Record a cash payment </Button>\n                                    <Button style={{ margin: '20px 0' }}> <Icon name='paypal' /> Paypal</Button>\n                                    Note: PayPal payments via debit or credit card incur fees of up to 4%. Venmo payments via credit card incur fees of 3%. Visit PayPal.com or Venmo.com for details.\n                                </Modal.Content>    \n                                <Modal.Actions>\n                                    <Button\n                                        color='black'\n                                        onClick={() => setSecondOpen(false)}>\n                                        Cancel\n                                    </Button>\n                                    <Button\n                                        content=\"Save\"\n                                        onClick={() => setThirdOpen(true)} \n                                        // onClick={submitForm}\n                                        positive\n                                    />\n                                </Modal.Actions>\n                            </Modal>\n                            <Modal\n                                as={Form}\n                                onSubmit={submitsettleUpForm}\n                                onClose={() => setThirdOpen(false)}\n                                open={thirdOpen}\n                                size='small'\n                            >\n                                <Modal.Header>Settle Up the Payment</Modal.Header>\n                                \n                                <Modal.Content className=\"model__contentdescription divider\" style={{ textAlign: 'center' }} >\n                                    You Paid {settleUpName}\n                                </Modal.Content>\n                                <Modal.Content className=\"model__contentdescription\" style={{ display: 'flex', flexDirection: 'column', paddingTop:'20px'}}>\n                                   <input\n                                        placeholder=\"Enter an amount\"\n                                        name=\"amount\"\n                                        value={settleUpvalues.amount}\n                                        onChange={changeValuessettleUp}\n                                    />\n                                </Modal.Content>    \n                                <Modal.Actions>\n                                    <Button\n                                        // icon='Cancel'\n                                        content='Cancel'\n                                        onClick={submitPayment}\n                                    />\n                                    <Button\n                                        content=\"Save\"\n                                        onClick={submitsettleUpForm}\n                                        positive\n                                        type='submit'\n                                    />\n                                </Modal.Actions>\n                            </Modal>\n                        </>\n                    )}\n                </div>\n            </div>\n            <div className=\"dashboard__insights\">\n                <div className=\"dashboard__insight\">\n                    {owed && owed.map(o => {\n                        amountOwed += o.AccountDetails.amount;\n                    })}\n                    {owe && owe.map(o => {\n                        amountOwe += o.AccountDetails.amount;\n                    })}\n                    <h4>total balances</h4>\n                    {}\n                    <p>${amountOwed + amountOwe}</p>\n                </div>\n                <div className=\"dashboard__insight\" style={{ borderRight: '1px solid #ddd', borderLeft: '1px solid #ddd', lineHeight: '1px'}}>\n                    <h4>you owe</h4>\n                    \n                    <p>${(-amountOwe)}</p>\n                </div>\n                <div className=\"dashboard__insight\">\n                    <h4>you owed</h4>\n                    \n                    <p>${amountOwed}</p>\n                </div>\n            </div>\n            <div className=\"dashboard__body\">\n                <div className=\"body__headings\">\n                    <h3>YOU OWE</h3>\n                    <div className=\"body__headings__buttons\">\n                        <button class=\"small ui button\">\n                            <i class=\"list icon\"></i>\n                            view as list\n                        </button>\n                        <button class=\"small ui basic button\">\n                            <i class=\"chart bar outline icon\"></i>\n                            view chart\n                        </button>\n                    </div>\n                    <h3>YOU ARE OWED</h3>\n                </div>\n                <div className=\"dashboard__accounts\">\n                    <div className=\"dashboard__owe\">\n                       {owe && owe.map(account => (\n                            // console.log(account.AccountDetails.friendName)\n                            <Card name={account.AccountDetails.friendName} amount={-(account.AccountDetails.amount)} owe={true} />\n                        ))}\n                    </div>\n                    <div className=\"dashboard__owed\">\n                        {owed && owed.map(account => (\n                            // console.log(account.AccountDetails.friendName)\n                            <Card name={account.AccountDetails.friendName} amount={account.AccountDetails.amount} owe={false} />\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst ADD_TRANSACTION = gql`\n  mutation addAmount(\n    $body:String!, \n    $amount:String!, \n    $username:String!\n  ) {\n    addAmount(body:$body, amount:$amount, username:$username){\n        user1\n        user2\n        amountOwe{\n            body\n            amount\n            lenderName\n            borrowerName\n        }\n        user1OweCount\n        user2OweCount\n        createdAt\n    }\n  }\n`;\nconst SETTLE_UP = gql`\n  mutation($postId: String!, $amount: String!) {\n    settleUpAmount(postId: $postId, amount: $amount) {\n      user1\n      user2\n      user1OweCount\n      user2OweCount\n      createdAt\n    }\n  }\n`;\n\n\n\n\n\nexport default Dashboard\n","import { useQuery } from '@apollo/react-hooks';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AuthContext } from '../../../context/auth';\nimport { FETCH_USERS_QUERY } from '../../../utils/graphql';\nimport './Sidebar.css';\n\nfunction Sidebar() {\n\n    const { loading, data } = useQuery(FETCH_USERS_QUERY);\n    const user = useContext(AuthContext)\n    const [friends, setFriends] = useState([]);\n    // useEffect(() => {\n    //     console.log(\"Friends from Sidebar\", data)\n    // },[])\n    useEffect(() => {\n        if (data) {\n            data.getUsers.map(friends => {\n                if (friends.username != user.user.username) {\n                    // setFriends(...friends, friends.username)\n                    setFriends(prevState => [...prevState, friends.username])\n                }})\n        }\n    },[data])\n    \n\n    console.log(friends)\n\n    const [active, setActive] = useState(false)\n\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar__upper\">\n                <div className=\"sidebar__upper__items\" style={{borderLeft: '5px solid #5bc5a7'}}>\n                    <img src=\"https://www.splitwise.com/assets/press/logos/bg-primary.svg\" alt=\"\" />\n                    <h3>Dashboard</h3>\n                </div>\n                <div className=\"sidebar__upper__items\">\n                    <i className=\"flag outline icon\"></i>\n                    <h3>Recent Activity</h3>\n                </div>\n                <div className=\"sidebar__upper__items sidebar__upper__items__input\">\n                    <i className=\"search icon\"></i>\n                    <input type=\"text\" placeholder=\"Filter by name\"/>\n                </div>\n                <div className=\"sidebar__upper__items\">\n                    <i className=\"list icon\"></i>\n                    <h3>All Expenses</h3>\n                </div>\n            </div>\n            <div className=\"sidebar__middle\">\n                <div className=\"sidebar__headline\">\n                    <h4>GROUPS</h4>\n                    <span>\n                        <i class=\"plus icon\"></i>\n                        Add\n                    </span>\n                </div>\n                <div className=\"sidebar__upper__items\">\n                    <i class=\"tag icon\"></i>\n                    <h3>Home</h3>\n                </div>\n                <div className=\"sidebar__upper__items\">\n                    <i class=\"tag icon\"></i>\n                    <h3>Friends</h3>\n                </div>\n            </div>\n            <div className=\"sidebar__lower\">\n                <div className=\"sidebar__headline\">\n                    <h4>FRIENDS</h4>\n                    <span style={{display: 'flex'}}>\n                        <i class=\"plus icon\"></i>\n                        Add\n                    </span>\n                </div>\n                {data && friends.map(user => (\n                    <div className=\"sidebar__upper__items\">\n                        <i class=\"user icon\"></i>\n                        <h3>{user}</h3>\n                    </div>\n                ))}\n\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar\n","import React, { useContext } from 'react'\nimport { Route } from 'react-router-dom';\nimport { AuthContext } from '../../context/auth';\nimport Login from '../Authentication/Login/Login';\nimport Ads from './Ads/Ads';\nimport './Body.css';\nimport Dashboard from './Dashboard/Dashboard'\nimport Sidebar from './Sidebar/Sidebar'\n\nfunction Body() {\n    const user = useContext(AuthContext)\n    console.log(\"user:-\", user)\n    return (\n        <div className=\"body\">\n            {user.user ? (\n                <>\n                    <Sidebar />\n                    <Dashboard/>\n                    <Ads />\n                </>\n            ):(\n                <Login  />\n            )}\n            \n        </div>\n    )\n}\n\nexport default Body\n","import { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport React, { useEffect, useState } from 'react'\nimport { Button } from 'semantic-ui-react';\n\nfunction Testform() {\n  const [settleUpValues, setSettleUpValues] = useState({\n    amount: \"50\",\n    postId:\"602af74427c710359c0a4e81\"\n  })\n  \n  // const [addSettleUpBill, {data} ] = useMutation(SETTLE_UP)\n  const sendForm = () => {\n    console.log(\"I am clicked\")\n    // setSettleUpValues({\n    //   amount: \"50\",\n    //   postId: \"602af74427c710359c0a4e81\"\n    // })\n    console.log(settleUpValues)\n    addtoDatabase()\n  }\n\n  // const addtoDatabase = () => {\n  //   console.log(settleUpValues)\n  // }\n\n  const [addtoDatabase] = useMutation(SETTLE_UP, {\n        update() {\n            // setComment('');\n            // commentInputRef.current.blur();\n        },\n        variables:settleUpValues\n    });\n\n  return (\n    <div>\n      <h1>Test</h1>\n      <Button onClick={sendForm}>Click</Button>\n    </div>\n  )\n}\n\n// const SETTLE_UP = gql`\n// mutation settleUpAmount(\n//     $amount:String!, \n//     $postID:String!\n//   ) {\n//     addAmount(amount:$amount, postID:$postID){\n//         user1\n//         user2\n//         user1OweCount\n//         user2OweCount\n//         createdAt\n//     }\n//   }\n// `;\n\nconst SETTLE_UP = gql`\n  mutation($postId: String!, $amount: String!) {\n    settleUpAmount(postId: $postId, amount: $amount) {\n      user1\n      user2\n      user1OweCount\n      user2OweCount\n      createdAt\n    }\n  }\n`;\n\n\nexport default Testform\n","import './App.css';\nimport Header from './Components/Header/Header';\nimport {BrowserRouter as Router,Route, Switch} from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css';\nimport Login from './Components/Authentication/Login/Login';\nimport Signup from './Components/Authentication/SignUp/Signup';\nimport { AuthContext, AuthProvider } from './context/auth';\nimport AuthRoute from './utils/AuthRoute';\nimport Body from './Components/Body/Body';\nimport { useContext } from 'react';\nimport Testform from './Components/Body/TestForm/Testform';\n\n// import AuthRoute from './utils/AuthRoute';\n\n\nfunction App() {\n\n  const { user } = useContext(AuthContext)\n  console.log(\"user\", user);\n\n  return (\n    <AuthProvider>\n      <div className=\"App\">\n        <Router>\n        <Header /> \n          <Route exact path=\"/\" component={Body} />\n          <Route exact path=\"/test\" component={Testform} />\n          <AuthRoute exact path=\"/Signup\" component={Signup} />\n          <AuthRoute exact path=\"/login\" component={Login} />\n        </Router>\n      </div>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport App from './App';\nimport ApolloClient from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { createHttpLink } from 'apollo-link-http';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { setContext } from \"apollo-link-context\";\n\n\nconst httpLink = createHttpLink({\n  uri: 'https://splitwise-clone.herokuapp.com/'\n});\n\nconst setAuthorizationLink = setContext((request, previousContext) => {\n  const token = localStorage.getItem('jwtToken');\n  return {\n    headers: {\n      Authorization: token ? `Bearer ${token}` : ''\n    }\n  };\n});\n\nconst client = new ApolloClient({\n  link: setAuthorizationLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nexport default (\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ApolloProvider from './ApolloProvider';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(ApolloProvider, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}